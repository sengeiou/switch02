apply plugin: 'com.android.application'
def dbflow_version = "4.2.4"
android {

    signingConfigs {
        szp {
            storeFile file('E:\\keyStore\\szip.keystore')
            storePassword 'damibao123'
            keyAlias 'key'
            keyPassword 'damibao123'
        }
    }
    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION

    sourceSets.main.jniLibs.srcDirs = ['libs']
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    defaultConfig {

        applicationId 'com.szip.jswitch'
        minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
        versionName project.APP_VERSION

        versionCode Integer.parseInt(project.VERSION_CODE)

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi','arm64-v8a','armeabi-v7a' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.szp
        }
        debug {
            signingConfig signingConfigs.szp
        }
    }
    flavorDimensions "app","config"
    productFlavors {


        Mycandy{
            dimension "app"
            applicationId = 'com.szip.jswitch'
            minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
            targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
            versionName '1.33'

            versionCode 33
            signingConfig signingConfigs.szp
            buildConfigField "int", "App", "1"
            buildConfigField("String", "APP_NAME", '"mycandy"')
            manifestPlaceholders = [
                    app_name      : "mycandy",
                    app_icon      : "@mipmap/icon",
                    app_round_icon: "@mipmap/icon",
                    app_style     : "@style/AppTheme"]
        }

        Switch{
            dimension "app"
            applicationId = 'com.szip.switch2'
            minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
            targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
            versionName '1.06'

            versionCode 6
            signingConfig signingConfigs.szp
            buildConfigField "int", "App", "1"
            buildConfigField("String", "APP_NAME", '"switch essentials"')
            manifestPlaceholders = [
                    app_name      : "switch essentials",
                    app_icon      : "@mipmap/icon",
                    app_round_icon: "@mipmap/icon",
                    app_style     : "@style/AppTheme"]
        }


        iSmarport{
            dimension "app"
            applicationId = 'com.szip.sportwatch'
            minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
            targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
            versionName '1.70'

            versionCode 70
            signingConfig signingConfigs.szp
            buildConfigField "int", "App", "1"
            buildConfigField("String", "APP_NAME", '"iSmarport"')
            manifestPlaceholders = [
                    app_name      : "iSmarport",
                    app_icon      : "@mipmap/icon",
                    app_round_icon: "@mipmap/icon",
                    app_style     : "@style/AppTheme"]
        }

        Cloud {
            dimension "config"

            buildConfigField("String", "SERVER_URL", '"https://cloud.znsdkj.com:8443/sportWatch/"')
            buildConfigField("String", "FLAVORS", '""')
        }

        Local {
            dimension "config"

            buildConfigField("String", "SERVER_URL", '"https://test.znsdkj.com:8443/sportWatch/"')
            buildConfigField("String", "FLAVORS", '""')
        }

        Tencent {
            dimension "config"

            buildConfigField("String", "SERVER_URL", '"https://cloud.znsdkj.com:8443/sportWatch/"')
            buildConfigField("String", "FLAVORS", '"com.tencent.android.qqdownloader"')
        }

        Vivo {
            dimension "config"

            buildConfigField("String", "SERVER_URL", '"https://cloud.znsdkj.com:8443/sportWatch/"')
            buildConfigField("String", "FLAVORS", '"com.bbk.appstore"')
        }

        Huawei {
            dimension "config"

            buildConfigField("String", "SERVER_URL", '"https://cloud.znsdkj.com:8443/sportWatch/"')
            buildConfigField("String", "FLAVORS", '"com.huawei.appmarket"')
        }

        Google {
            dimension "config"

            buildConfigField("String", "SERVER_URL", '"https://cloud.znsdkj.com:8443/sportWatch/"')
            buildConfigField("String", "FLAVORS", '"com.android.vending"')
        }

    }
    buildFeatures {
        viewBinding true
    }


    //改写APK名称
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            variant.getPackageApplication().outputDirectory = new File("F:\\aab\\MyCandy")
        }
    }


}


dependencies {
    implementation fileTree(include: ['*.jar','*.aar'], dir: 'libs')
    implementation 'androidx.navigation:navigation-fragment:2.3.0'
    implementation 'androidx.navigation:navigation-ui:2.3.0'
    testImplementation 'junit:junit:4.12'
    implementation project(':ncalendar')
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.2'
    implementation 'com.google.android.material:material:1.0.0'
    //数据库
    annotationProcessor "com.github.Raizlabs.DBFlow:dbflow-processor:$dbflow_version"
    implementation "com.github.Raizlabs.DBFlow:dbflow-core:$dbflow_version"
    implementation "com.github.Raizlabs.DBFlow:dbflow:$dbflow_version"
    //http
    implementation 'com.squareup.okhttp3:okhttp-urlconnection:3.2.0'
    implementation 'com.google.code.gson:gson:2.3.1'
    //加载框
    implementation 'com.kaopiz:kprogresshud:1.0.1'

    //图片裁剪
    implementation 'org.apache.commons:commons-lang3:3.7'
    implementation 'com.github.Creky:uCrop:2.2.3'

    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation project(':okhttputils')
    implementation project(':citypicker')


    implementation files('libs/commons-codec-1.5.jar')
    implementation files('libs/FotaVdmLib.jar')
    implementation files('libs/MREPermission.jar')
    implementation files('libs/signpost-commonshttp4-1.2.1.1.jar')
    implementation files('libs/signpost-core-1.2.1.1.jar')
    implementation 'org.greenrobot:eventbus:3.0.0'

    //图片缓存
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    implementation project(path: ':library')
    implementation files('libs\\wearable.jar')

    //高德地图SDK
    implementation 'com.amap.api:3dmap:9.5.0'


    //google地图SDK
    implementation 'com.google.android.gms:play-services-maps:12.0.1'
    implementation 'com.google.maps.android:android-maps-utils:0.5'


//    implementation 'com.tencent.bugly:crashreport:latest.release'
}
